[{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read. You can find any YML to TOML converters if necessary. Guide Follow Quick Start guide to setup hugo and create a new site.\nNote: Use -f to select yml format\nhugo new site \u0026lt;name of site\u0026gt; -f yml\nMake sure you install latest version of hugo(\u0026gt;=0.83.0).\nAfter you have created a new site, at Step 3 follow the steps:\nMethod 1 Inside the folder of your Hugo site, run:\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ncd themes/PaperMod git pull Method 2 You can use as submodule with\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod --depth=1 git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ngit submodule update --remote --merge Method 3 Or you can Download as Zip from Github Page and extract in your themes directory\nDirect Links:\nMaster Branch (Latest) v5.0 v4.0 v3.0 v2.0 v1.0 Finally \u0026hellip; Add in config.yml:\ntheme: \u0026#34;PaperMod\u0026#34; Method 4 Install Go programming language in your operating system.\nIntialize your own hugo mod\nhugo mod init YOUR_OWN_GIT_REPOSITORY Add PaperMod in your config.yml file module: imports: - path: github.com/adityatelange/hugo-PaperMod Update theme hugo mod get -u Quick Links Papermod - Features Papermod - FAQs Papermod - Variables Papermod - Icons ChangeLog Sample config.yml Example Site Structure is present here: exampleSite\nUse appropriately\nbaseURL: \u0026#34;https://examplesite.com/\u0026#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false pygmentsUseClasses: true googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: Welcome to my blog socialIcons: - name: twitter url: \u0026#34;https://twitter.com/\u0026#34; - name: stackoverflow url: \u0026#34;https://stackoverflow.com\u0026#34; - name: github url: \u0026#34;https://github.com/\u0026#34; analytics: google: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; bing: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; yandex: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma # pygmentsUseClasses: true # markup: # highlight: # # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai Sample Page.md --- title: \u0026#34;My 1st post\u0026#34; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026#34;/first\u0026#34;] tags: [\u0026#34;first\u0026#34;] author: \u0026#34;Me\u0026#34; # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026#34;Desc Text.\u0026#34; canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true ShowRssButtonInSectionTermList: true cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # image path/url alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- You can use it by creating archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; ","permalink":"https://macsim2.github.io/posts/papermod/papermod-installation/","summary":"Read Install and Update instructions here","title":"Installation | Update"},{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\nYou can find any YML to TOML converters if necessary.\nAssets (js/css) The following is enabled by default\nminification - makes the assets size smallest as possible. bundling - bundles all the styles in one single asset fingerprint/integrity check. Default Theme light/dark/auto params: # defaultTheme: light # defaultTheme: dark defaultTheme: auto # to switch between dark or light according to browser theme Theme Switch Toggle (enabled by default) Shows icon besides title of page to change theme\nTo disable it :\ndisableThemeToggle: true You can refer following table for better understanding\u0026hellip;\ndefaultTheme disableThemeToggle checks local storage? checks system theme? Info auto true No Yes only system theme false Yes (if not-\u0026gt;2) Yes (2) switch present dark true No No force dark only false Yes No switch present light true No No force light only false Yes No switch present Archives Layout Create a page with archive.md in content directory with following content\n. ├── config.yml ├── content/ │ ├── archives.md \u0026lt;--- Create archive.md here │ └── posts/ ├── static/ └── themes/ └── PaperMod/ and add the following to it\n--- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archives/\u0026#34; summary: archives --- Note: Archives Layout does not support Multilingual Month Translations.\nex: archives.md\nRegular Mode (default-mode) Home-Info Mode Use 1st entry as some Information\nadd following to config file\nparams: homeInfoParams: Title: Hi there wave Content: Can be Info, links, about... socialIcons: # optional - name: \u0026#34;\u0026lt;platform\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link\u0026gt;\u0026#34; - name: \u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link2\u0026gt;\u0026#34; ex. config.yml#L106\nProfile Mode Shows Index/Home page as Full Page with Social Links and Image\nadd following to config file\nparams: profileMode: enabled: true title: \u0026#34;\u0026lt;Title\u0026gt;\u0026#34; # optional default will be site title subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;image link\u0026gt;\u0026#34; # optional imageTitle: \u0026#34;\u0026lt;title of image as alt\u0026gt;\u0026#34; # optional imageWidth: 120 # custom size imageHeight: 120 # custom size buttons: - name: Archive url: \u0026#34;/archive\u0026#34; - name: Github url: \u0026#34;https://github.com/\u0026#34; socialIcons: # optional - name: \u0026#34;\u0026lt;platform\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link\u0026gt;\u0026#34; - name: \u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Search Page PaperMod uses Fuse.js Basic for seach functionality\nAdd the following to site config, config.yml\noutputs: home: - HTML - RSS - JSON # is necessary Create a page with search.md in content directory with following content\n--- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; --- To hide a particular page from being searched, add it in post\u0026rsquo;s fron\u0026rsquo;t matter\n--- searchHidden: true ex: search.md\nSearch Page also has Key bindings:\nArrow keys to move up/down the list Enter key (return) or Right Arrow key to Go to highlighted page Escape key to clear searchbox and results For Multilingual use search.\u0026lt;lang\u0026gt;.md ex. search.es.md.\nNote: Search will work only on current language, user is currently on !\nCustomizing Fusejs Options\nRefer https://fusejs.io/api/options.html for Options, Add those as shown below.\nparams: fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] Draft Page indication adds [draft] mark to indicate draft pages.\nPost Cover Image In post\u0026rsquo;s page-variables add :\ncover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # can also paste direct link from external site # ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; relative: false # To use relative path for cover image, used in hugo Page-bundles When you include images in the Page Bundle, multiple sizes of the image will automatically be provided using the HTML5 srcset field.\nTo reduce generation time and size of the site, you can disable this feature using\nparams: cover: responsiveImages: false To enable hyperlinks to the full image size on post pages, use\nparams: cover: linkFullImages: true Share Buttons on post Displays Share Buttons at Bottom of each post\nto show share buttons add\nparams: ShowShareButtons: true Show post reading time Displays Reading Time (the estimated time, in minutes, it takes to read the content.)\nTo show reading time add\nParams: ShowReadingTime: true Show Table of Contents (Toc) on blog post Displays ToC on blog-pages\nTo show ToC add following to page-variables\nShowToc: true To keep Toc Open by default on a post add following to page-variables:\nTocOpen: true BreadCrumb Navigation Adds BreadCrumb Navigation above Post\u0026rsquo;s Title to show subsections and Navigation to Home\nparams: ShowBreadCrumbs: true Can be diabled for particular page\u0026rsquo;s front-matter\n--- ShowBreadCrumbs: false --- Edit Link for Posts Add a button to suggest changes by using the file path of the post to link to a edit destination.\nFor site config use:\nParams: editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link Can be modified for individual pages\n--- editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- The example above would yield the following link for the post file posts/post-name.md: https://github.com/\u0026lt;path_to_repo\u0026gt;/content/posts/post-name.md\nParameter Required Default Value editPost.URL true - editPost.appendFilePath false false editPost.Text false \u0026ldquo;Edit\u0026rdquo; Since the link generated is a regular HTML anchor tag \u0026lt;a href=...\u0026gt;, you can also use other URL schemas like mailto://, e.g. URL: \u0026quot;mailto://mail@example.com?subject=Suggesting changes for \u0026quot;\nOther Posts suggestion below a post Adds a Previous / Next post suggestion under a single post\nparams: ShowPostNavLinks: true Multiple Authors To Use multiple authors for a post, in post-variables:\n--- author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] --- To use Multiple Authors Site-wide, in config.yml:\nparams: author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] Comments to add comments, create a html file\nlayouts/partials/comments.html\nand paste code provided by your comments provider\nalso in config add this\nparams: comments: true read more about this hugo-comments\nAccessKeys c - ToC Open/Close g - Go To Top h - Home (according to current lang) t - Theme toggle / - Jumps to search page if in menu What\u0026rsquo;s AccessKeys ?\nEnhanced SEO Enabled only when env: production\nRich Results/Snippets Support Twitter Cards Support The Twitter Cards metadata, except twitter:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The twitter:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, twitter:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. OpenGraph support The OpenGraph metadata, except og:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The og:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, og:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. For pages, you can also add audio (using frontmatter audio: filename.ext) and/or videos. videos: - filename01.mov - filename02.avi Multilingual Support Misc Scroll-Bar themed (by default) Smooth Scroll between in-page links (by default) Scroll-to-Top Button (by default) Displays a Scroll-to-Top button in right-bottom corner Google Analytics integration Syntax highlighting RSS feeds ","permalink":"https://macsim2.github.io/posts/papermod/papermod-features/","summary":"Learn About All Features in PaperMod","title":"Features"},{"content":"오랜만에 글을 쓰는 것 같다 아니 그렇다.. 복귀전을 치르는 김에 간단하게 End-to-End ASR WeNet에 대해서 적어보려고 한다..하하\nWeNet을 이용한 58.com의 AI 연구실의 이야기이다. 처음 ESPNet을 이용해서 인식기를 만들었다고 한다, 디코딩 속도를 올리기 위한 여러가지 기법(beamsize reduction, frame skipping finetuning, attention-assisted alignment)을 시도 했지만 만족하지 못했다고 한다. 이유는 대규모 배포와 많은 개발이 필요 했기 때문,\n그래서 채택한게 WeNet 이라고 했고, 이유는 좋은 인식률, 간결한 코드, 쉬운 배포라고 한다.\n오늘은 저들이 말하는 좋은 인식률을 보이게 된 이유를 적어보려고 한다. Semi-Supervised Learning 20년도에 발표한 NST(Noisy Student Training) 논문이 있다. 레이블 되지 않은 데이터를 pseudo label을 붙이고 기본 모델을 학습하고 학습된 모델로 다시 pseudo label을 붙이고 학습하고 이 루틴을 반복 해서 학습하면 인식률이 좋아진다는 내용이다. Optimizing Efficient Conformer conformer architecture를 사용하고 있는데 이때 encoding 부분에서 디코딩의 90%이상을 차지한다고 한다. 그래서 encoder를 최적화해야 하는데 Efficient Conformer[3] 논문을 사용하여 다운 샘플링해서 계산하는 프레임 수를 줄여 시간 복잡도를 줄이는 방법이라고 한다. 이 방법은 추후 리뷰를 하는게 맞는 듯 하다 Model Compressing knowledge distillation, 지식증류 방법이라는 것이 있다. 이 논문 또한 hinton 교수의 논문으로 간단히 얘기하면 teacher 모델의 추론 결과를 주 학습 대상으로 삼아서 student 모델의 파라미터를 학습시키는 것으로 굉장히 나에게는 신선한 방법으로 영감(?)을 주었던 방법이다..! 결과로 절대 CER은 teacher에 못 미치지만 같은 모델 사이즈로 훈련 했을 때 사이즈가 27.4% 감소 했고, CER의 절대 증가가 3.19% 라고 한다 My Opinions 마지막으로 내 생각을 조금 적어보자면, 아마 58.com 랩에서도 적용 했겠지만, WeNet의 또 다른 큰 장점은 U2++ 디코딩인것 같다 하나의 architecture로 배치와 실시간 디코딩을 지원하고 bidirectional 한 방식의 디코딩은 단방향 디코딩 보다 높은 인식률을 나타낸다(그들 논문에 따르면..) 오늘은 이렇게 58.com ai lab에서 wenet을 어떻게 사용하고 있는지를 간단히 적어 보았다 나중에 따로 적을 부분도 많은 것 같은데 추후 적어서 볼 수 있기를 바라면서 이만 이 글을 마친다.\nreferences https://mp.weixin.qq.com/s/7T1gnNrVmKIDvQ03etltGQ https://arxiv.org/abs/2109.01163 https://arxiv.org/abs/1503.02531 ","permalink":"https://macsim2.github.io/posts/58.com.wenet/","summary":"오랜만에 글을 쓰는 것 같다 아니 그렇다.. 복귀전을 치르는 김에 간단하게 End-to-End ASR WeNet에 대해서 적어보려고 한다..하하\nWeNet을 이용한 58.com의 AI 연구실의 이야기이다. 처음 ESPNet을 이용해서 인식기를 만들었다고 한다, 디코딩 속도를 올리기 위한 여러가지 기법(beamsize reduction, frame skipping finetuning, attention-assisted alignment)을 시도 했지만 만족하지 못했다고 한다. 이유는 대규모 배포와 많은 개발이 필요 했기 때문,\n그래서 채택한게 WeNet 이라고 했고, 이유는 좋은 인식률, 간결한 코드, 쉬운 배포라고 한다.\n오늘은 저들이 말하는 좋은 인식률을 보이게 된 이유를 적어보려고 한다.","title":"58.com AI lab with WeNet"},{"content":"오늘은 Binary Search(이분 검색)에 대해서 알아보고자 한다.\n이전에 검색에 대해 간단한 convention 및 알고리즘을 알아보자.\n검색이란 무엇인가? 자고로 검색이란 자료의 집합에서 특정한 키에 해당하는 자료를 찾는 일로써 매우 다양한 상황에서 발생한다. 또한 거의 모든 자료 관리 프로그램들은 다음과 같은 여섯 가지의 기능을 제공해야 한다. - ja ku lee1\n자료 파일 초기화 자료 파일에서 특정한 키로 레코드 검색 새로운 자료를 자료 파일에 삽입 기존의 자료를 파일에서 삭제 두 파일을 하나로 결합 파일을 정렬 1-4까지의 기능은 자료 관리 프로그램에서는 보통 필수적으로 들어가 있는 듯 하다.\n검색 알고리즘의 대부분은 자료를 특정한 방법으로 조직화한다. 이렇게 조직화되어 있는 자료 파일에서 임의로 하나의 자료를 삽입하거나 삭제하면 자칫 전체 자료 파일의 구조를 깨뜨리는 경우가 많다. 그래서 삽입과 삭제도 허용하는 검색 알고리즘의 경우에는 반드시 삽입 동작과 삭제 동작을 검색 동작과 함께 제공해야 한다.\nBinary Search에 대해서 이분 검색은 마치 퀵 정렬과 유사하게 분할해서 점령하라(Divide and conquer)라는 전략을 사용한다. 이 전략을 사용하는 알고리즘은 문제의 크기를 거의 절반씩 나누어 가기 때문에 실행시간은 log의 성질을 가진다. 특히 정확히 양분하는 경우에는 최악의 경우라도 log2N의 성능을 가진다.\n이분 검색은 순차 검색(sequencial search)에 비해서 자료의 정렬된 순서를 유지해야 하는 불리한 점이 있다. 이로 인해서 자료의 삽입과 삭제시에 평균 N/2개의 자료를 당기고 미는 부가적인 작업이 필요하다. 하지만 이 단점은 큰 자료에 대해 가지는 이분 검색의 장점을 생각한다면 충분히 납득할 수 있는 것이다.\n이분 검색은 삽입과 삭제의 어려움 때문에 삽입과 삭제가 적은 거의 고정적인 자료 집합에 매우 유용한 방법이다. 또한 단순한 배열 구조를 그대로 사용하기 때문에 프로그래밍도 간단하고 구현도 쉽고 메모리의 낭비도 없다. 하지만 매우 동적인 자료 구조에 대해서는 단점이 있기 때문에 이분 검색 보다는 이진 나무 검색(Binary tree search)을 사용하는 것이 훨씬 좋다.\n또한 개선 방법으로 보간법을 사용할 수 있는데 만약 자료의 크기가 크고 매우 고른 분포를 가지고 있다면 보간법 중에서도 \u0026lsquo;선형 보간법\u0026rsquo;을 쉽게 적용할 수 있다. 로그에서 보간법은 로그의 그래프를 아주 잘게 쪼개었을 때는 직선으로 근사할 수 있으므로 비례의 법칙을 시용하여 로그의 근사값을 알 수 있다는 접근법이다. (나중에 그림을 첨부하겠다.)\n주의할 점은 근사치를 구하기 위해 곱셈과 나눗셈의 float형 연산이 생기기 때문에 분포가 고르지 못한 배열에서 사용했다가는 오히려 성능의 저하가 나타나게 된다. 하지만 적합한 경우에는 평균적으로 log2(log2N)정도의 평균 검색 시간이 걸리는것으로 알려져 있어 잘만 사용하면 좋은 개선법이 될 수 있다.\n보간법의 조건은 다시 말하지만 키값이 숫자화될 수 있으며 고르게 분포된 아주 큰 파일에 적합한 검색방법이다.\nC로 배우는 알고리즘1 Jan 1, 2009\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://macsim2.github.io/posts/binary_search/","summary":"\u003cp\u003e오늘은 Binary Search(이분 검색)에 대해서 알아보고자 한다.\u003c/p\u003e\n\u003cp\u003e이전에 검색에 대해 간단한 convention 및 알고리즘을 알아보자.\u003c/p\u003e","title":"Binary Search"},{"content":"Web Server vs WAS(Web Application Server) 이전부터 좀 처럼 머리속에 안들어오는 내용이 있다. 따지면 그런것들이 많지만 오늘은 간단하게나마 기억할 수 있도록 기록을 남기려 한다.\n그 주인공은 바로 Web Server 와 WAS(Web application Server)이다. 웹 쪽에서 꽤 자주 등장하는 단어들인데 명확한 개념을 모르고 넘어간다는 점이 걸렸다.\n오늘은 이 두 개념과 기능 차이점만 간단하게 나열해보자..\nWeb Server 는 HTTP를 통해 웹 브라우저에서 요청하는 html 문서나 오브젝트(ex image file)을 전송 해주는 서비스 프로그램을 말한다. web server의 주된 기능은 클라이언트로 부터 http 요청을 받아들이고 웹 페이지를 클라이언트에게 전달하는 하는 역할을 하는 것이다.\n클라이언트가 서버에 페이지 요청을 하면 그 요청을 받아 정적 컨텐츠(.html, .png, .css등)를 제공해주는 서버이다. 대표적인 웹 서버에는 apache, nginx 등이 있다. WAS는 http 프로토콜을 통해 사용자의 컴퓨터나 장치에 애플리케이션을 수행해주는 미들웨어이다. (미들웨어란 시스템 소프트웨어와 응용 소프트웨어 사이 또는 두 가지 다른 종류의 응용 프로그램 사이에서 중개 역할을 하는 프로그램이다) 주로 동적인 컨텐츠에 대한 처리를 수행하며, 컨테이너, 웹컨테이너, 서블릿 컨테이너라고도 불린다고 한다.\n동적 컨텐츠를 처리하기 위해 만들어진 애플리케이션 서버 JSP, Servlet 구동 환경 제공 간단히 정리하면 아래와 같은 흐름이 된다.\n클라이언트에서 정적인 컨텐츠를 요청 했다면 웹 서버가 처리하게 된다. 요청 과정중에 동적인 컨텐츠가 들어가 있다면, 웹 컨테이너가 받아서 처리한다. ","permalink":"https://macsim2.github.io/posts/web_server_vs_was/","summary":"Web Server vs WAS(Web Application Server) 이전부터 좀 처럼 머리속에 안들어오는 내용이 있다. 따지면 그런것들이 많지만 오늘은 간단하게나마 기억할 수 있도록 기록을 남기려 한다.\n그 주인공은 바로 Web Server 와 WAS(Web application Server)이다. 웹 쪽에서 꽤 자주 등장하는 단어들인데 명확한 개념을 모르고 넘어간다는 점이 걸렸다.\n오늘은 이 두 개념과 기능 차이점만 간단하게 나열해보자..\nWeb Server 는 HTTP를 통해 웹 브라우저에서 요청하는 html 문서나 오브젝트(ex image file)을 전송 해주는 서비스 프로그램을 말한다.","title":"Web Server and WAS"},{"content":"CORS\n쓸데없이 계속 떠드는 글 안보기 하루는 어줍짢게 html과 그에 딸린 javascript 파일을 코딩하고 있을 때다. 왠지 익숙한 문구가 보였다. 브라우저 console탭에서 보이는 아래와 같은 메세지가 보였다.\nAccess to XMLHttpRequest at \u0026lsquo;~~~\u0026rsquo; from origin \u0026lsquo;~~~\u0026rsquo; has been blocked by CORS policy: No \u0026lsquo;Access-Control-Allow-Origin\u0026rsquo; header is present on the requested resource.\n이전에는 어떻게 대처했는지 기억도 잘 안나고 쉽게 문제가 해결된 것 같았다. 그런데 이번에는 CORS 문제가 아니었던 것 같았는데 이런 오류가 보였다. 사실 CORS가 무엇인지 어림 짐작 정도로만 알고 있었기 때문에 이 글을 쓰고 있는지도 모른다.\n같은 request method를 사용했고, 같은 서버로의 요청이었는데..? 뭔가 이상함을 느끼고 back단 서버를 점검했다. 언제나 그렇듯 처음에는 오만가지 생각이 든다. html 코딩이 조금 다른 까닭에 이런 오류가 발생한건지, xmlhttprequest 객체가 한번의 연결(?)만 허용되어 그런건지, 자유분방하지만 엉터리인 추측은 이렇듯 종종 펼쳐진다. 일을 하면서 이런 추측이 점점 줄어들 것이라 믿는다..\n문제의 실마리를 찾기위해 점검이던 중에도 이상한 점을 찾기까지는 시간이 좀 걸렸는데 결국은 서버단에서 실행되는 함수가 실패로 끝난 것이었다. 그것도 고치는데 조금 헤맸지만, 이 얘기는 다음에 하는 걸로 하자.\n사실은 CORS 에러가 아닌 함수의 실패로 인한 에러 문구 였다.. 바보 같이 정확히 읽어보지도 않고 섣부른 판단을 한것이다.\n하지만 이번에 몰랐던 CORS에 대해 좀 알아보고자 한다. 언젠가 또 만날테니까 CORS는 \u0026laquo;Cross-Origin-Resource Sharing\u0026raquo; 의 줄임말로, 쉽게 말해 요청을 하고 응답을 하는 두 서버간의 차이에 있는 정책이라고 이해하면 되겠다.\n그렇다면 \u0026lsquo;출처\u0026rsquo;는 무엇일까? http://hostname.com:80/path?user=macsim\u0026amp;page=1#foo 로 표시되는 서버의 위치를 뜻한다. 이 서버의 위치를 자잘하게 나누자면 이렇다.\nhttp:// protocol www.hostname.com host :80 port path path user=macsim\u0026amp;page=1 Query String #foo Fragment 서로 다른 출처(도메인)간 정보의 요청과 응답에 대한 (보안상)규제를 하기 위해 CORS 정책이 작동하고 있었던 것이다. web은 브라우저를 통해 소스가 제공된다는 점에서부터 보안이 걱정되기는 한다..\nCORS 정책을 위반하는 경우의 예시이다.\n프로토콜 조차 다르면 X host가 다르면 X port가 다른 경우는 브라우저에 따라 다르고 port까지 같고 path가 다른 경우는 O path까지 같고 query string이 다른경우도 O 와 같은 정책을 가지고 있다\n실제 웹 브라우저가 다른 출처로 요청을 할 경우 HTTP protocol을 사용하는데 요청 헤더에 Origin이라는 필드에 보내는 서버의 \u0026lsquo;위치\u0026rsquo;를 함께 담아 보낸다.\nOrigin: http://hostname.com 이후 요청을 받은 서버는 \u0026ldquo;Access-Control-Allow-Origin\u0026quot;이라는 필드에 자신에게 접근 가능한 출처를 보여주고 이후 응답을 받은 브라우저는 자신이 보냈던 요청의 Origin과 \u0026ldquo;Access-Control-Allow-Origin\u0026quot;을 비교해본 후 이 응답이 유효한 응답인지 아닌지를 결정한다.\n방금 설명한 이 과정이 바로 Preflight Request이다. \u0026lsquo;내가 직접 coding한 요청\u0026rsquo; 이전에 이러한 요청과 응답을 주고 받는 것이다.\n그러니 아직 잘은 모르지만 본인이 요청을 보낼 서버에 \u0026ldquo;Access-Control-Allow-Origin\u0026rdquo; 필드를 \u0026ldquo;*\u0026ldquo;로 설정해놓거나 허용 가능한 서버를 적는다면 CORS 에러는 면할 수 있을 것이다.\nCORS 문구가 보인다고 무조건 의심할것이 아니라 preflight 응답에서 \u0026ldquo;Access-Control-Allow-Origin\u0026rdquo; 필드에 유요한 서버가 들어가 있는가에 대한 문제다. 그렇다면 CORS 에러에 대한 의심은 그만해도 되기 때문이다.\n","permalink":"https://macsim2.github.io/posts/cors/","summary":"CORS\n쓸데없이 계속 떠드는 글 안보기 하루는 어줍짢게 html과 그에 딸린 javascript 파일을 코딩하고 있을 때다. 왠지 익숙한 문구가 보였다. 브라우저 console탭에서 보이는 아래와 같은 메세지가 보였다.\nAccess to XMLHttpRequest at \u0026lsquo;~~~\u0026rsquo; from origin \u0026lsquo;~~~\u0026rsquo; has been blocked by CORS policy: No \u0026lsquo;Access-Control-Allow-Origin\u0026rsquo; header is present on the requested resource.\n이전에는 어떻게 대처했는지 기억도 잘 안나고 쉽게 문제가 해결된 것 같았다. 그런데 이번에는 CORS 문제가 아니었던 것 같았는데 이런 오류가 보였다.","title":"CORS"},{"content":"얼마전 친구와 카레를 먹으러 간날 생긴 일이다. 카레를 먹던 친구는 나에게 물었다. 카카오톡도 통신중에 1bit이라도 틀릴 수 있지 않나..? 100%란 없을텐데 어떻게 데이터 신뢰성을 보장할 수 있나?\n전산에 기본 지식이 있는 친구였기에 더 자세히 설명해주고 싶었지만, 못내 제대로 설명을 해주지 못한 점이 마음에 걸렸다. 게다가 그런 얘기를 들으니 무선 통신이라는 녀석이 더 신기하게 다가오는게 아닌가..! 그래서! 공부겸 정리겸 원리만 간단하게 나마 정리해두려 한다.\n복잡하지만 원리만 이해하고 넘어가는 정도로만 적어두려고 한다. 자세한건 나도 잘 모른다..\n무선 통신 과정 기본 원리는 이렇다. 보내고자 하는 데이터 신호에 변조 과정을 거친다. 그런 다음 변조의 반대인 복조 과정을 거쳐서 수신된 신호를 읽어내면 된다. 수많은 실험과 현실적인 문제를 잠깐 내려두면 간단하게는 보인다.\n보낼 데이터 보낼 데이터가 라디오와 같은 아날로그 신호인 경우와 컴퓨터 데이터와 같은 디지털 신호로 나뉘게 된다.(다음에 나오는 변조도 아날로그와 디지털로 나뉜다.) 현대에는 아날로그보다 디지털 신호가 많이 사용된다.\n변조 그림으로 보는게 이해가 빠를거 같아서 꺼무위키 에서 디지털 변조 사진을 가져왔다. 사진과 같이 디지털 데이터를 baseband data 신호로 변경한다. 그런다음 여러가지 변조방법(PSK, FSK, ASK)을 통해 전기적 신호로 변경한다. 언젠가 여러가지 변조 방법에 대해 설명할 날이 올것 같다. 결국 변조란 데이터를 담은 신호를 채널에 알맞는 전송 파형으로 변환 하는 것이다.\n복조 변조된 신호에서 원래의 데이터 신호를 찾기 위한 방법이다. 검색내용이 많이 없는걸 보니 아마도 변조의 반대 방법으로 decoding이 가능해서 그런가 보다,,\n변조와 복조로 간단하게 무선 통신의 기본 원리는 알았으니 어떻게 데이터의 신뢰성을 보장할 수 있는가 알아보자. 이 사항은 조금 자세하게 알아보자.\n신뢰성을 유지하는 방법 A/D 변환 \u0026ndash;\u0026gt; 소스코딩 \u0026ndash;\u0026gt; 채널코딩 \u0026ndash;\u0026gt; 변조 \u0026ndash;\u0026gt; 라인코딩 \u0026ndash;\u0026gt; 전송 \u0026ndash;\u0026gt; 복조 \u0026ndash;\u0026gt; 역채널코딩 \u0026ndash;\u0026gt; 역소스코딩 \u0026ndash;\u0026gt; D/A변환 송신과 수신간 자세한 과정을 나열했다. 변조하기 전에 채널 코딩이라는 단계가 있다. 바로 이 부분이 신호의 에러를 정정하고 복구 기능을 사용하여 정확한 정보를 전송할 수 있도록 도와주는 부분이다. 구분 기법 설명 오류검출/ 정정여부 Parity Check Blocksum, CRC 등 검출 Hamming Code BCH, R-S 등 자체 정정 오류영향 최소화 Orthogonal Signal 파형 코딩, 대척신호 등 Block Code Block/Non-Block 코드 신호기억 여부 Reed-Solomon 미기억, BCH 코드 등 Convolutional 기억, Turbo 코드 등 parity check, CRC(Cyclic Redundancy Check), CheckSum, 해밍 디스턴스 등 다양하고 보완적인 알고리즘을 통해 데이터의 신뢰성을 보장할 수 있는 것이었다.\n","permalink":"https://macsim2.github.io/posts/wireless_communication/","summary":"\u003cp\u003e얼마전 친구와 카레를 먹으러 간날 생긴 일이다. 카레를 먹던 친구는 나에게 물었다.\n카카오톡도 통신중에 1bit이라도 틀릴 수 있지 않나..?\n100%란 없을텐데 어떻게 데이터 신뢰성을 보장할 수 있나?\u003c/p\u003e","title":"Wireless Communication"},{"content":"nginx 란?\nnginx란 reverse proxy, load balancer, mail proxy and HTTP cache 등으로 사용되는 웹 서버이다.\n여기서 웹 서버란 소프트웨어의 의미로 world wide web 상에서 client의 request를 만족하는 기능을 담당한다. WAS(Web Aplication Service)라고 생각하면 되겠다.\napache vs nginx 인터넷에 nginx를 쳐보니 apache라는 녀석과 많은 비교를 하고 있는 것을 볼 수 있었다. 이유인 즉슨 비교가 쉽게 되는 서로 다른 방식의 event 처리 방법을 사용하고 있었기 때문인 것 같았다.\nApache MPM(Multi Processing Module) 아키텍쳐기반\u2028MPM은 세부적으로 3가지로 나뉘게 되는데, prefork, worker, event로 나뉜다.\u2028prefork는 하나의 요청을 싱글 스레드로 처리(메모리 소모가 크다는 단점)\u2028worker는 하나의 요청을 멀티 스레드로 처리( 메모리를 공유하기 때문에 메모리 효율성은 prefork보다 좋고, 통신량이 많을 때 유리)\u2028event방식은 worker에 keep alive 메커니즘이 포함되어 있다고 한다. nginx Event-Driven 아키텍쳐 기반\u2028Event-Driven 방식은 event에 중점을 두어 발생한 event를 Event Handler의 기능을 하는 객체가 비동기 방식으로 먼저 처리되는 것부터 처리 한다고 한다.\u2028고정된 프로세스만 생성하여 그 프로세스의 내부에서 비동기 방식으로 작업을 처리한다고 하니 보다 적은 스레드 비용을 가지고 많은 요청을 처리할 수 있다. 아래 그림을 보면 더 이해가 쉬울 것 같다. event driven에 대해 알아보면서 구체적으로 event가 어떻게 처리되는지 궁금해졌다. 이것과 관련해서 node.js를 통해 설명한 포스트를 발견할 수 있었는데 순서는 이렇다.\nevent emit Event loop가 처리 처리하는 동안 다음 이벤트를 처리하는 것으로 넘어감 처리가 완료되면 callback 함수를 호출함. 3번에서 event를 처리하는 동안 다음 event를 처리하는 것으로 넘어갈 수 있는 이유를 Event driven과 같은 프로세스가 처리되는 것을 javascript 코드가 아닌 I/O bound에 한해서 처리된다고 했기 때문이다. (I/O bound는 filesystem, network, socket R/W, database 등을 처리하는 것을 말하고, CPU bound는 CPU 자원을 사용하여 처리하는 일들이라고 생각하면 된다.) 따라서 CPU가 관여하지 않는 작업이 시작되면 기다리지 않고 바로 다른 작업을 수행할 수 있는 것이다.\n(https://blog.naver.com/jhc9639/221108496101) 자세하고, 관련 실험까지 있어서 좋은 정보를 얻을 수 있었다.\n서버에 부담을 줄이고자 하는 경우는 nginx의 선택이 맞겠지만 그러나 모든 경우에서 nginx가 좋다고 할수는 없다. 성능은 낮지만 apache가 가진 많은 모듈과 php과의 연동기능이 있어, 확장성과 호환성이 좋기 때문이다. 어찌보면 뻔한 답이지만 상황에 맞는 소프트웨어를 사용하면 되겠다.\nnetcraft에 따르면 2017년 10월 웹 서버 소프트웨어의 점유 순위는 apache가 44.89% nginx가 20.65%였는데 2020년 2월에 가서는 apache가 24.51% nginx가 36.48%를 기록했다. 물론 다른 조사기관에서는 조금씩 다르긴 하\n","permalink":"https://macsim2.github.io/posts/nginx/","summary":"\u003cp\u003enginx 란?\u003c/p\u003e\n\u003cp\u003enginx란 reverse proxy, load balancer, mail proxy and HTTP cache 등으로 사용되는 웹 서버이다.\u003c/p\u003e","title":"nginx"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Inline Code This is Inline Code\nOnly pre This is pre text Code block with backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with backticks and language specified 1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gist List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://macsim2.github.io/posts/markdown-syntax/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode ","permalink":"https://macsim2.github.io/posts/rich-content/","summary":"\u003cp\u003eHugo ships with several \u003ca href=\"https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes\"\u003eBuilt-in Shortcodes\u003c/a\u003e for rich content, along with a \u003ca href=\"https://gohugo.io/about/hugo-and-gdpr/\"\u003ePrivacy Config\u003c/a\u003e and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\u003c/p\u003e","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates (extend_head.html) like so: refer ISSUE #236 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\) Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","permalink":"https://macsim2.github.io/posts/math-typesetting/","summary":"\u003cp\u003eMathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\u003c/p\u003e","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","permalink":"https://macsim2.github.io/posts/emoji-support/","summary":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways.\u003c/p\u003e","title":"Emoji Support"}]